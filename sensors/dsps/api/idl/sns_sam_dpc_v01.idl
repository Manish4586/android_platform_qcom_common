/*****************************************************************************
  @FILE     sns_sam_dpc_v01.idl

  @BRIEF    Message definition for the Device Position classifier algorithm service

  @DESCRIPTION
  This file defines messages used by Device Position classifier algorithm service.

  As prerequisite, the sensor algorithm must use the common Interface
  defined in the Sensor algorithm framework.

  The messages defined herein will be passed to the Sensor framework using
  the sensor1_write() API.

  Copyright (c) 2014 Qualcomm Technologies, Inc.  All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/
include "sns_sam_common_v01.idl";

revision 3;

const SNS_SAM_DPC_SUID = 0xb9b65987126198a1;

//! @ENUM SNS_SAM_DPC_EVENT_MODE_ENUM
enum
{
    SNS_SAM_DPC_EVENT_MODE_ALL_EVENTS    =       0,
    SNS_SAM_DPC_EVENT_MODE_HIDDEN_OR_NOT =       1
} sns_sam_dpc_event_mode_e;

//! @ENUM SNS_SAM_DPC_STATE_ENUM
enum
{
    SNS_SAM_DPC_DEV_PICKED_UP       =  0,
    SNS_SAM_DPC_DEV_CONCEALED       =  1,
    SNS_SAM_DPC_DEV_PLACED_ON_DESK  =  2,
    SNS_SAM_DPC_DEV_STATE_CHANGED   =  3
} sns_sam_dpc_state_e;

struct {
  sns_sam_dpc_state_e dpc_state;
  /**<
    Indicates state of the DPC algorithm
  */
} sns_sam_dpc_report_data_s;

//============================================================================
/** @COMMAND SNS_SAM_DPC_ENABLE
    @BRIEF This command enables the dpc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_DPC_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
    //! @VERSION 1.1
  optional sns_suspend_notification_s notify_suspend;
  /**< Identifies if indications for this request should be sent
       when the processor is in suspend state.

       If this field is not specified, default value will be set to
       notify_suspend->proc_type                  = SNS_PROC_MODEM
       notify_suspend->send_indications_during_suspend  = TRUE

       This field does not have any bearing on error indication
       messages, which will be sent even during suspend.
    */
} sns_sam_dpc_enable_req_msg;

//! @MSG     SNS_SAM_DPC_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**<
    Algorithm instance ID maintained/assigned by SAM.
    The client shall use this instance ID for future messages associated with
    current algorithm instance.
    */
} sns_sam_dpc_enable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_DPC_DISABLE
    @BRIEF This command disables the dpc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_DPC_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< To identify the algorithm instance to be disabled.  */
} sns_sam_dpc_disable_req_msg;

//! @MSG     SNS_SAM_DPC_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */
} sns_sam_dpc_disable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_DPC_GET_REPORT
    @BRIEF This command fetches latest report output of dpc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_DPC_GET_REPORT_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */
} sns_sam_dpc_get_report_req_msg;

//! @MSG     SNS_SAM_DPC_GET_REPORT_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  optional uint32 timestamp;
  /**< Timestamp of input with which latest dpc report was computed
  in SSC ticks  */

  optional sns_sam_dpc_report_data_s report_data;
  /**< dpc algorithm output report  */

} sns_sam_dpc_get_report_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_DPC_REPORT
    @BRIEF Output report from the dpc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_DPC_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  mandatory uint32 timestamp;
  /**< Timestamp of input with which latest dpc report was computed
  in SSC ticks */

  mandatory sns_sam_dpc_report_data_s report_data;
  /**< dpc algorithm output report  */

} sns_sam_dpc_report_ind_msg;


//============================================================================
/** @COMMAND SNS_SAM_DPC_ERROR
    @BRIEF Asynchronous error report from the dpc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_DPC_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  mandatory uint32 timestamp;
  /**< Timestamp of when the error was detected; in SSC ticks */

  mandatory uint8 error;
  /**< sensors error code */
} sns_sam_dpc_error_ind_msg;

//============================================================================
/** @COMMAND SNS_SAM_DPC_CANCEL
    @BRIEF Cancels all requests to the algorithm service from this client.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
/** @COMMAND SNS_SAM_DPC_VERSION
    @BRIEF This command requests algorithm service version.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
// Service definition
//============================================================================
service SNS_SAM_DPC_SVC {
  //! @ID SNS_SAM_DPC_CANCEL
  sns_common_cancel_req_msg        SNS_SAM_DPC_CANCEL_REQ,
  sns_common_cancel_resp_msg       SNS_SAM_DPC_CANCEL_RESP
    = 0x00;

  //! @ID SNS_SAM_DPC_VERSION
  sns_common_version_req_msg       SNS_SAM_DPC_VERSION_REQ,
  sns_common_version_resp_msg      SNS_SAM_DPC_VERSION_RESP
    = 0x01;

  //! @ID SNS_SAM_DPC_ENABLE
  sns_sam_dpc_enable_req_msg       SNS_SAM_DPC_ENABLE_REQ,
  sns_sam_dpc_enable_resp_msg      SNS_SAM_DPC_ENABLE_RESP
    = 0x02;

  //! @ID SNS_SAM_DPC_DISABLE
  sns_sam_dpc_disable_req_msg      SNS_SAM_DPC_DISABLE_REQ,
  sns_sam_dpc_disable_resp_msg     SNS_SAM_DPC_DISABLE_RESP
    = 0x03;

  //! @ID SNS_SAM_DPC_GET_REPORT
  sns_sam_dpc_get_report_req_msg   SNS_SAM_DPC_GET_REPORT_REQ,
  sns_sam_dpc_get_report_resp_msg  SNS_SAM_DPC_GET_REPORT_RESP
    = 0x04;

  //! @ID SNS_SAM_DPC_REPORT
  sns_sam_dpc_report_ind_msg       SNS_SAM_DPC_REPORT_IND
    = 0x05;

  //! @ID SNS_SAM_DPC_ERROR
  sns_sam_dpc_error_ind_msg        SNS_SAM_DPC_ERROR_IND
    = 0x06;

  //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
  sns_sam_get_algo_attrib_req_msg  SNS_SAM_DPC_GET_ATTRIBUTES_REQ,
  sns_sam_get_algo_attrib_resp_msg SNS_SAM_DPC_GET_ATTRIBUTES_RESP
    = 0x24;

} = SNS_QMI_SVC_ID_48;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================
