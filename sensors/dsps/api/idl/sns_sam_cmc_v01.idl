/*****************************************************************************
  @FILE     sns_sam_cmc_v01.idl

  @BRIEF    Message definition for the Coarse Motion Classifier algorithm service

  @DESCRIPTION
  This file defines messages used by Coarse Motion Classifier algorithm service.

  As prerequisite, the sensor algorithm must use the common Interface
  defined in the Sensor algorithm framework.

  The messages defined herein will be passed to the Sensor framework using
  the sensor1_write() API.

  @COPYRIGHT
  Copyright (c) 2013-2014 Qualcomm Technologies, Inc.  All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/
include "sns_sam_common_v01.idl";

revision 4;

const SNS_SAM_CMC_SUID = 0xad1eb7a3547f6a4a;

const SNS_SAM_CMC_MS_NUM = 8;
/**< Max number of supported motion states
*/

//! @ENUM SNS_SAM_CMC_MS_ENUM
enum
{
    SNS_SAM_CMC_MS_UNKNOWN = 0,
    SNS_SAM_CMC_MS_STATIONARY = 1,
    SNS_SAM_CMC_MS_MOVE = 2,
    SNS_SAM_CMC_MS_FIDDLE = 3,
    SNS_SAM_CMC_MS_PEDESTRIAN = 4,
    SNS_SAM_CMC_MS_VEHICLE = 5,
    SNS_SAM_CMC_MS_WALK = 6,
    SNS_SAM_CMC_MS_RUN = 7
} sns_sam_cmc_ms_e;

struct {
  sns_sam_cmc_ms_e motion_state;
  /**<
    Detected motion state.
  */
  float motion_state_probability;
  /**<
    Likelihood of the reported motion state in the range from 0 to 1.
  */
} sns_sam_cmc_report_data_s;

//============================================================================
/** @COMMAND SNS_SAM_CMC_ENABLE
    @BRIEF This command enables the cmc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_CMC_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  //! @VERSION 1.1
  optional sns_suspend_notification_s notify_suspend;
  /**< Identifies if indications for this request should be sent
       when the processor is in suspend state.

       If this field is not specified, default value will be set to
       notify_suspend->proc_type                  = SNS_PROC_MODEM
       notify_suspend->send_indications_during_suspend  = TRUE

       This field does not have any bearing on error indication
       messages, which will be sent even during suspend.
    */
} sns_sam_cmc_enable_req_msg;

//! @MSG     SNS_SAM_CMC_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**<
    Algorithm instance ID maintained/assigned by SAM.
    The client shall use this instance ID for future messages associated with
    current algorithm instance.
    */
} sns_sam_cmc_enable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_CMC_DISABLE
    @BRIEF This command disables the cmc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_CMC_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< To identify the algorithm instance to be disabled.  */
} sns_sam_cmc_disable_req_msg;

//! @MSG     SNS_SAM_CMC_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */
} sns_sam_cmc_disable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_CMC_GET_REPORT
    @BRIEF This command fetches latest report output of cmc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_CMC_GET_REPORT_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */
} sns_sam_cmc_get_report_req_msg;

//! @MSG     SNS_SAM_CMC_GET_REPORT_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  optional uint32 timestamp;
  /**< Timestamp of last sensor input sample with which motion state was computed.
  Unit is in SSC clock ticks*/

  optional sns_sam_cmc_report_data_s report_data;
  /**< cmc algorithm output report  */
} sns_sam_cmc_get_report_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_CMC_REPORT
    @BRIEF Output report from the cmc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_CMC_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  mandatory uint32 timestamp;
  /**< Timestamp of last sensor input sample with which motion state was computed.
  Unit is in SSC clock ticks*/

  mandatory sns_sam_cmc_report_data_s report_data;
  /**< cmc algorithm output report  */
} sns_sam_cmc_report_ind_msg;


//============================================================================
/** @COMMAND SNS_SAM_CMC_ERROR
    @BRIEF Asynchronous error report from the cmc algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_CMC_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance.  */

  mandatory uint32 timestamp;
  /**< Timestamp of when the error was detected; in SSC clock ticks */

  mandatory uint8 error;
  /**< sensors error code */
} sns_sam_cmc_error_ind_msg;

//============================================================================
/** @COMMAND SNS_SAM_CMC_CANCEL
    @BRIEF Cancels all requests to the algorithm service from this client.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
/** @COMMAND SNS_SAM_CMC_VERSION
    @BRIEF This command requests algorithm service version.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//============================================================================
// Service definition
//============================================================================
service SNS_SAM_CMC_SVC {
  //! @ID SNS_SAM_CMC_CANCEL
  sns_common_cancel_req_msg        SNS_SAM_CMC_CANCEL_REQ,
  sns_common_cancel_resp_msg       SNS_SAM_CMC_CANCEL_RESP
    = 0x00;

  //! @ID SNS_SAM_CMC_VERSION
  sns_common_version_req_msg       SNS_SAM_CMC_VERSION_REQ,
  sns_common_version_resp_msg      SNS_SAM_CMC_VERSION_RESP
    = 0x01;

  //! @ID SNS_SAM_CMC_ENABLE
  sns_sam_cmc_enable_req_msg       SNS_SAM_CMC_ENABLE_REQ,
  sns_sam_cmc_enable_resp_msg      SNS_SAM_CMC_ENABLE_RESP
    = 0x02;

  //! @ID SNS_SAM_CMC_DISABLE
  sns_sam_cmc_disable_req_msg      SNS_SAM_CMC_DISABLE_REQ,
  sns_sam_cmc_disable_resp_msg     SNS_SAM_CMC_DISABLE_RESP
    = 0x03;

  //! @ID SNS_SAM_CMC_GET_REPORT
  sns_sam_cmc_get_report_req_msg   SNS_SAM_CMC_GET_REPORT_REQ,
  sns_sam_cmc_get_report_resp_msg  SNS_SAM_CMC_GET_REPORT_RESP
    = 0x04;

  //! @ID SNS_SAM_CMC_REPORT
  sns_sam_cmc_report_ind_msg       SNS_SAM_CMC_REPORT_IND
    = 0x05;

  //! @ID SNS_SAM_CMC_ERROR
  sns_sam_cmc_error_ind_msg        SNS_SAM_CMC_ERROR_IND
    = 0x06;

  //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
  sns_sam_get_algo_attrib_req_msg  SNS_SAM_CMC_GET_ATTRIBUTES_REQ,
  sns_sam_get_algo_attrib_resp_msg SNS_SAM_CMC_GET_ATTRIBUTES_RESP
    = 0x24;

} = SNS_QMI_SVC_ID_41;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================
