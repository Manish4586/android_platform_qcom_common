/*****************************************************************************
  @FILE     sns_sam_filtered_mag.idl

  @BRIEF    Message definition for magnetometer filter.

  @DESCRIPTION
  This file defines messages provided to clients to use
  filtered magnetometer algorithm services.

  @COPYRIGHT
  Copyright (c) 2011-2014 Qualcomm Technologies, Inc. All Rights Reserved.
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/
include "sns_sam_common_v01.idl";

revision 4;

const SNS_SAM_FILTERED_MAG_SUID = 0x1f26c853d60b4ab0;

const SNS_SAM_FILTERED_MAG_MAX_REPORTS_IN_BATCH = 98;
/**< Max number of reports in a batch indication -
     set based on max payload size supported by transport framework*/

struct {
  float filtered_mag[3];
  /**< Filtered magnetometer: 0 = x axis, 1 = y axis, 2 = z axis; Gaussian, floats. */
  uint8 accuracy;
  /**< Measure of accuracy: 0 = least accurate, 3 = most accurate. */
} sns_sam_filtered_mag_result_s;

//============================================================================
/** @COMMAND SNS_SAM_FILTERED_MAG_ENABLE
    @BRIEF Enables a filtered magnetometer algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_FILTERED_MAG_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint32 report_period;
  /**< Reporting perion in seconds; Q16 format. Determines the algorithm output
       report rate. Specify 0 to report at the sampling rate. 
  */
  optional uint32 sample_rate;
  /**< Sample rate in Hz; Q16 format. 
       If the sample rate is less than the report rate, it is set to the report
       rate.
  */
  //! @VERSION 1.4
  optional sns_suspend_notification_s notify_suspend;
  /**< Identifies whether indications for this request are to be sent
       when the processor is in the Suspend state.

       If this field is not specified, the default value is set to:
       notify_suspend->proc_type                  = SNS_PROC_APPS
       notify_suspend->send_indications_during_suspend  = FALSE

       This field does not have any bearing on error indication
       messages, which are sent even during Suspend.
    */
} sns_sam_filtered_mag_enable_req_msg;

//! @MSG     SNS_SAM_FILTERED_MAG_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s                resp = 2;
  /**< Common response message. */
  optional uint8                             instance_id;
  /**< Instance ID, which is assigned by the SAM.
       The client must use this instance ID for future messages associated with
       the current algorithm instance.
  */
} sns_sam_filtered_mag_enable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_FILTERED_MAG_DISABLE
    @BRIEF Disables a filtered magnetometer algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_FILTERED_MAG_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8                            instance_id;
  /**< Identifies the algorithm instance. */
} sns_sam_filtered_mag_disable_req_msg;

//! @MSG     SNS_SAM_FILTERED_MAG_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s                resp = 2;
  /**< Common response message. */
  optional uint8                             instance_id;
  /**< Identifies the algorithm instance. */
} sns_sam_filtered_mag_disable_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_FILTERED_MAG_REPORT
    @BRIEF Report containing the filtered mag algorithm output.
*/
//============================================================================

//! @MSG     SNS_SAM_FILTERED_MAG_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory uint8                            instance_id;
  /**< Identifies the algorithm instance. */
  mandatory uint32                           timestamp;
  /**< Timestamp at which this output is applicable. */
  mandatory sns_sam_filtered_mag_result_s    result;
  /**< Output of the filtered mag algorithm instance. */
} sns_sam_filtered_mag_report_ind_msg;


//============================================================================
/** @COMMAND SNS_SAM_FILTERED_MAG_GET_REPORT
    @BRIEF Gets the latest report output of a filtered mag algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_FILTERED_MAG_GET_REPORT_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8                            instance_id;
  /**< Identifies the algorithm instance. */
} sns_sam_filtered_mag_get_report_req_msg;

//! @MSG     SNS_SAM_FILTERED_MAG_GET_REPORT_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s                resp = 2;
  /**< Common response message. */
  optional uint8                             instance_id;
  /**< Identifies the algorithm instance. */
  optional uint32                            timestamp;
  /**< Timestamp at which this report is applicable. */
  optional sns_sam_filtered_mag_result_s     result;
  /**< Output of the filtered mag algorithm instance. */
} sns_sam_filtered_mag_get_report_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_FILTERED_MAG_ERROR
    @BRIEF Asynchronous error indication for a filtered mag algorithm.
*/
//============================================================================

//! @MSG     SNS_SAM_FILTERED_MAG_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8                            error;
  /**< Sensor1 error code. */
  mandatory uint8                            instance_id;
  /**< Identifies the algorithm instance. */
} sns_sam_filtered_mag_error_ind_msg;

//! @VERSION 1.4
//============================================================================
/** @COMMAND SNS_SAM_FILTERED_MAG_BATCH
    @BRIEF This command handles batch mode for Filtered Magnetic Vector algorithm.
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
    @DESCRIPTION Set the batch period for an active algorithm stream.
                 A subsequent request may update or disable the batch period;
                 all batched output will be sent prior to the response message.
*/
//============================================================================

//! @MSG     SNS_SAM_FILTERED_MAG_BATCH_REQ
//! @TYPE    Request
//! @SENDER  Client
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance ID identifies the algorithm instance.  */

  mandatory int32 batch_period;
  /**< Specifies interval over which reports are to be batched in seconds, Q16.
       If AP is in suspend and notify_suspend is FALSE, undelivered
       reports will be batched in circular FIFO and delivered upon wakeup.
       P = 0 to disable batching.
       P > 0 to enable batching.
    */

} sns_sam_filtered_mag_batch_req_msg;

//! @MSG     SNS_SAM_FILTERED_MAG_BATCH_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s resp = 2;

  optional uint8 instance_id;
  /**< Algorithm instance ID maintained/assigned by SAM */

  optional uint32 max_batch_size;
  /**< Max supported batch size */

  optional uint32 timestamp;
  /**< Timestamp when the batch request was processed in SSC ticks */
} sns_sam_filtered_mag_batch_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_FILTERED_MAG_BATCH_REPORT
    @BRIEF Report containing a batch of algorithm outputs
    @USAGE Production
    @SECURITY_LEVEL Medium Risk
    @REQUIRED_ACTION Default
*/
//============================================================================

//! @MSG     SNS_SAM_FILTERED_MAG_BATCH_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory uint8 instance_id;
  /**< Instance id identifies the algorithm instance */

  mandatory uint32 first_report_timestamp;
  /**< Timestamp at which first report is applicable, in SSC ticks */

  mandatory uint16 timestamp_offsets<SNS_SAM_FILTERED_MAG_MAX_REPORTS_IN_BATCH>;
  /**< Offsets from timestamp of previous report in batch */

  mandatory sns_sam_filtered_mag_result_s reports<SNS_SAM_FILTERED_MAG_MAX_REPORTS_IN_BATCH>;
  /**< Filtered Magnetic Vector algorithm output reports */

  optional uint8 ind_type;
  /**< Optional batch indication type
       SNS_BATCH_ONLY_IND - Standalone batch indication. Not part of a back to back indication stream
       SNS_BATCH_FIRST_IND - First indication in stream of back to back indications
       SNS_BATCH_INTERMEDIATE_IND - Intermediate indication in stream of back to back indications
       SNS_BATCH_LAST_IND - Last indication in stream of back to back indications
    */

} sns_sam_filtered_mag_batch_ind_msg;

//============================================================================
// Service definition
//============================================================================
service SNS_SAM_FILTERED_MAG_SVC {
  //! @ID SNS_COMMON_CANCEL
  sns_common_cancel_req_msg            SNS_SAM_FILTERED_MAG_CANCEL_REQ,
  sns_common_cancel_resp_msg           SNS_SAM_FILTERED_MAG_CANCEL_RESP
    = 0x00;

  //! @ID SNS_COMMON_VERSION
  sns_common_version_req_msg           SNS_SAM_FILTERED_MAG_VERSION_REQ,
  sns_common_version_resp_msg          SNS_SAM_FILTERED_MAG_VERSION_RESP
    = 0x01;

  //! @ID SNS_SAM_FILTERED_MAG_ENABLE
  sns_sam_filtered_mag_enable_req_msg       SNS_SAM_FILTERED_MAG_ENABLE_REQ,
  sns_sam_filtered_mag_enable_resp_msg      SNS_SAM_FILTERED_MAG_ENABLE_RESP
    = 0x02;

  //! @ID SNS_SAM_FILTERED_MAG_DISABLE
  sns_sam_filtered_mag_disable_req_msg      SNS_SAM_FILTERED_MAG_DISABLE_REQ,
  sns_sam_filtered_mag_disable_resp_msg     SNS_SAM_FILTERED_MAG_DISABLE_RESP
    = 0x03;

  //! @ID SNS_SAM_FILTERED_MAG_GET_REPORT
  sns_sam_filtered_mag_get_report_req_msg   SNS_SAM_FILTERED_MAG_GET_REPORT_REQ,
  sns_sam_filtered_mag_get_report_resp_msg  SNS_SAM_FILTERED_MAG_GET_REPORT_RESP
    = 0x04;

  //! @ID SNS_SAM_FILTERED_MAG_REPORT
  sns_sam_filtered_mag_report_ind_msg       SNS_SAM_FILTERED_MAG_REPORT_IND
    = 0x05;

  //! @ID SNS_SAM_FILTERED_MAG_ERROR
  sns_sam_filtered_mag_error_ind_msg        SNS_SAM_FILTERED_MAG_ERROR_IND
    = 0x06;

  //! @ID SNS_SAM_FILTERED_MAG_BATCH
  sns_sam_filtered_mag_batch_req_msg        SNS_SAM_FILTERED_MAG_BATCH_REQ,
  sns_sam_filtered_mag_batch_resp_msg       SNS_SAM_FILTERED_MAG_BATCH_RESP
    = 0x21;

  //! @ID SNS_SAM_FILTERED_MAG_BATCH_REPORT
  sns_sam_filtered_mag_batch_ind_msg        SNS_SAM_FILTERED_MAG_BATCH_IND
    = 0x22;

  //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
  sns_sam_get_algo_attrib_req_msg      SNS_SAM_FILTERED_MAG_GET_ATTRIBUTES_REQ,
  sns_sam_get_algo_attrib_resp_msg     SNS_SAM_FILTERED_MAG_GET_ATTRIBUTES_RESP
    = 0x24;

} = SNS_QMI_SVC_ID_17;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================

