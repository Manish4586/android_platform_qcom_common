/*****************************************************************************
  @FILE     sns_sam_gyroint_v01.idl

  @BRIEF    Message definition for GYROINT algorithm.

  @DESCRIPTION
  This file defines messages provided to clients to use the GYROINT
  algorithm. Currently, the camera team uses this.

  @COPYRIGHT
  Copyright (c) 2012-2014 Qualcomm Technologies, Inc.  All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.

*****************************************************************************/
include "sns_sam_common_v01.idl";

revision 4;

const SNS_SAM_GYROINT_SUID = 0xee76e96d3ab800b7;

/****************************************************************************
 *  @BRIEF  Constants
 ****************************************************************************/
const SNS_SAM_GYROINT_MAX_BUFSIZE = 16;
/**<  This value is chosen such that the final max message
      size generated does not exceed that constrained by the SNS framework
      (~ 850 bytes).
 */

/****************************************************************************
 *  @BRIEF  struct
 ****************************************************************************/
struct {
  int32   value[3];   /**< gyro sample (x,y,z), rad/sec, Q16 */
  uint64  timestamp;  /**< APPS realtime [usec] **/
} sns_sam_gyroint_sample_t;

struct {
  uint8 enable_angle_valid;
  /** 1 => Enable integrated angle calculation **/

  uint8 enable_sample_valid;
  /** 1 => Enable raw gyro samples **/

  int32 angle[3];
  /**< integrated_angle 0 ==> x,1 ==> y,2 ==> z axis, radians, Q16*/

  sns_sam_gyroint_sample_t  sample<SNS_SAM_GYROINT_MAX_BUFSIZE>;
  /**< buffered samples radians/s, Q16*/
} sns_sam_gyroint_outparam_s;

struct {
  uint8   seqnum; /**< sequence number if echoed back in reponse */
  uint32  zoom;   /**< zoom used */
  int32   dis[2]; /**< DIS offsets (x,y) */
} sns_sam_gyroint_inparam_s;


/****************************************************************************
 *  @COMMAND  SNS_SAM_GYROINT_ENABLE
 *  @BRIEF    This command enables the GYROINT interface
*****************************************************************************/

//! @MSG     SNS_SAM_GYROINT_ENABLE_REQ
//! @TYPE    Request
//! @SENDER  Control point
//----------------------------------------------------------------------------
message {
  mandatory uint8 enable_angle;
  /** 1 => Requesting integrated angle values **/
  mandatory uint8 enable_sample;
  /** 1 => Requesting raw gyro samples **/
  mandatory uint32 sample_rate;
  /**< sample rate in Hz, Q16; */
  mandatory uint8  extra_sample;
  /**<  if extra_sample==1, include one sample before t_start, and one sample
        after t_end.
   */
} sns_sam_gyroint_enable_req_msg;


//! @MSG     SNS_SAM_GYROINT_ENABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------
message {
  mandatory sns_common_resp_s                resp = 2;
  optional uint8                             instance_id;
  /**<
    Instance ID is assigned by SAM.
    The client shall use this instance ID for future messages associated with
    this algorithm instance.
  */
} sns_sam_gyroint_enable_resp_msg;


/****************************************************************************
 *  @COMMAND SNS_SAM_GYROINT_DISABLE
 *  @BRIEF This command disables the algorithm
 ****************************************************************************/

//! @MSG     SNS_SAM_GYROINT_DISABLE_REQ
//! @TYPE    Request
//! @SENDER  Control point
//----------------------------------------------------------------------------
message {
  mandatory uint8                            instance_id;
  /**< Instance ID identifies the algorithm instance.  */
} sns_sam_gyroint_disable_req_msg;

//! @MSG     SNS_SAM_GYROINT_DISABLE_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s     resp = 2;
  optional  uint8                 instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_gyroint_disable_resp_msg;


/****************************************************************************
 *  @COMMAND SNS_SAM_GYROINT_REPORT
 *  @BRIEF   Report indication from algorithm.
 ****************************************************************************/

//! @MSG     SNS_SAM_GYROINT_REPORT_IND
//! @TYPE    Indication
//! @SENDER  Service
//----------------------------------------------------------------------------
message {
  mandatory uint8     instance_id;
  mandatory uint32    timestamp;    //!< time when this msg is generated
  mandatory uint8     seqnum;       /**< sequence number (associated with the
                                         corresponding REPORT_REQ) */
  optional  sns_sam_gyroint_outparam_s    frame_info;
  optional  sns_sam_gyroint_outparam_s    frame_info2;
  /**< Frame information returned by GYROINT service. Information is first
       saved in frame_info. If buffer in 'frame_info' is filled up,
       'frame_info2' is used. */
} sns_sam_gyroint_report_ind_msg;


/****************************************************************************
 *  @COMMAND SNS_SAM_GYROINT_GET_REPORT
 *  @BRIEF This command requests report from GYROINT algorithm
 ****************************************************************************/

//! @MSG     SNS_SAM_GYROINT_GET_REPORT_REQ
//! @TYPE    Request
//! @SENDER  Control point
//----------------------------------------------------------------------------
message {
  mandatory uint8                     instance_id;
  /**< Instance ID identifies the algorithm instance */
  mandatory uint64                    t_start;
  /**<  timestamps for start of integration time (usec) */
  mandatory uint64                    t_end;
  /**<  timestamps for end of integration time  (usec) */
  mandatory uint8                     seqnum;
  /**<  sequence number (issued by client) */
  optional sns_sam_gyroint_inparam_s  frame_info;
  /**< Pass in any information about previous camera frames */
} sns_sam_gyroint_get_report_req_msg;

//! @MSG     SNS_SAM_GYROINT_GET_REPORT_RESP
//! @TYPE    Response
//! @SENDER  Service
//----------------------------------------------------------------------------

message {
  mandatory sns_common_resp_s        resp = 2;
  optional uint8                     instance_id;
  /**< Instance ID identifies the algorithm instance */
} sns_sam_gyroint_get_report_resp_msg;


//============================================================================
/** @COMMAND SNS_SAM_GYROINT_ERROR
    @BRIEF Asynchronous error indication
*/
//============================================================================

//! @MSG     SNS_SAM_GYROINT_ERROR_IND
//! @TYPE    Indication
//! @SENDER  Service
//============================================================================

message {
  mandatory uint8               error;
  /**< Sensor1 error code */
  mandatory uint8               instance_id;
  /**< Instance ID identifies the algorithm instance. */
} sns_sam_gyroint_error_ind_msg;


//============================================================================
// Service definition
//============================================================================
service SNS_SAM_GYROINT_SVC {
  //! @ID SNS_COMMON_CANCEL
  sns_common_cancel_req_msg            SNS_SAM_GYROINT_CANCEL_REQ,
  sns_common_cancel_resp_msg           SNS_SAM_GYROINT_CANCEL_RESP
    = 0x00;

  //! @ID SNS_COMMON_VERSION
  sns_common_version_req_msg           SNS_SAM_GYROINT_VERSION_REQ,
  sns_common_version_resp_msg          SNS_SAM_GYROINT_VERSION_RESP
    = 0x01;

  //! @ID SNS_SAM_GYROINT_ENABLE
  sns_sam_gyroint_enable_req_msg       SNS_SAM_GYROINT_ENABLE_REQ,
  sns_sam_gyroint_enable_resp_msg      SNS_SAM_GYROINT_ENABLE_RESP
    = 0x02;

  //! @ID SNS_SAM_GYROINT_DISABLE
  sns_sam_gyroint_disable_req_msg      SNS_SAM_GYROINT_DISABLE_REQ,
  sns_sam_gyroint_disable_resp_msg     SNS_SAM_GYROINT_DISABLE_RESP
    = 0x03;

  //! @ID SNS_SAM_GYROINT_GET_REPORT
  sns_sam_gyroint_get_report_req_msg   SNS_SAM_GYROINT_GET_REPORT_REQ,
  sns_sam_gyroint_get_report_resp_msg  SNS_SAM_GYROINT_GET_REPORT_RESP
    = 0x04;

  //! @ID SNS_SAM_GYROINT_REPORT
  sns_sam_gyroint_report_ind_msg       SNS_SAM_GYROINT_REPORT_IND
    = 0x05;

  //! @ID SNS_SAM_GYROINT_ERROR
  sns_sam_gyroint_error_ind_msg        SNS_SAM_GYROINT_ERROR_IND
    = 0x06;

  //! @ID SNS_SAM_GET_ALGO_ATTRIBUTES
  sns_sam_get_algo_attrib_req_msg      SNS_SAM_GYROINT_GET_ATTRIBUTES_REQ,
  sns_sam_get_algo_attrib_resp_msg     SNS_SAM_GYROINT_GET_ATTRIBUTES_RESP
    = 0x24;

} = SNS_QMI_SVC_ID_35;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/

//============================================================================
// End of Module
//============================================================================

