/*****************************************************************************
  @FILE     sns_smgr_restricted_api_v01.idl

  @BRIEF    SMGR (Sensors Manager) Restricted API

  @DESCRIPTION
  The SMGR Restricted API defines messages which provide Restricted SMGR
  services to its clients. The usage of these messages will only be defined to
  approved clients. This may be done through a shared header file or through
  other means.

  @COPYRIGHT
  Copyright (c) 2013-2014 Qualcomm Technologies, Inc.  All Rights Reserved
  Qualcomm Technologies Proprietary and Confidential.
*****************************************************************************/
include "sns_common_v01.idl";

revision 3;

/** Status of Driver Access Framework, used in sns_smgr_driver_access_resp_msg.
  */
const  SNS_SMGR_DRIVER_ACCESS_STATUS_SUCCESS  = 0;
 /**< The request was processed and serviced successfully */

const  SNS_SMGR_DRIVER_ACCESS_INVALID_UUID    = 1;
 /**< Invalid UUID provided in the request */

const  SNS_SMGR_DRIVER_ACCESS_INVALID_PARAM   = 2;
 /**< Invalid parameter or message in the request */

const  SNS_SMGR_DRIVER_ACCESS_INVALID_REQ     = 3;
/**< Request is unsupported by the DD */

const  SNS_SMGR_DRIVER_ACCESS_SMGR_FAILURE    = 4;
/**< Unspecified error in the SMGR */

const  SNS_SMGR_DRIVER_ACCESS_DD_FAILURE      = 5;
/**< Unspecified error in the driver */

const  SNS_SMGR_DRIVER_ACCESS_FAIL            = 6;
/**< Unspecified error */

const  SNS_SMGR_DRIVER_ACCESS_PENDING         = 7;
/**< The request is pending completion */


/** =============== Driver Access Framework Constants ===============*/

/** Length of the UUID byte array */
const SNS_SMGR_UUID_LENGTH              = 16;

/** Maximum size (in bytes) of the Driver Access message */
const SNS_SMGR_MAX_DAF_MESSAGE_SIZE     = 256;


//!============================================================================
/** @COMMAND SNS_SMGR_DRIVER_ACCESS
    @BRIEF This command allows a client to pass in an arbitrary message to the
    desired device driver.
    @USAGE Production
    @SECURITY_LEVEL High Risk
    @REQUIRED_ACTION Default
*/
//!============================================================================
//! @MSG     SNS_SMGR_DRIVER_ACCESS_REQ
//! @TYPE    Request
//! @SENDER  Client
message {
  mandatory uint8 Uuid[SNS_SMGR_UUID_LENGTH];
  /**< The UUID of the device driver the request is to be forwarded to.
  */

  mandatory uint32 RequestId;
  /**< The request identifier specifies a particular request. Furthermore,
       this field tells the driver how the RequestMsg is encoded so it may be
       properly decoded. This field is only understood by the Sensor1 client
       and the driver.
  */

  optional opaque RequestMsg<SNS_SMGR_MAX_DAF_MESSAGE_SIZE>;
  /**< An opaque message to be delivered to the device driver. The device
       driver will parse this.
  */

  //! @VERSION 1.3
  optional uint8 TransactionId;
  /**< A unique identifier assigned by the client to distinguish this
       transaction from other concurrent transactions.
       IMPORTANT: It is up to the device driver to support concurrent
       transactions.
  */
} sns_smgr_driver_access_req_msg;

//! @MSG     SNS_SMGR_DRIVER_ACCESS_RESP
//! @TYPE    Response
//! @SENDER  Service
message {
  mandatory sns_common_resp_s Resp = 2;

  optional uint8 ResponseStatus;
  /**< An error code generated by the SMGR.
      - SNS_SMGR_DRIVER_ACCESS_STATUS_SUCCESS - The request was processed
          and serviced successfully
      - SNS_SMGR_DRIVER_ACCESS_INVALID_UUID - Invalid UUID provided in the
          request
      - SNS_SMGR_DRIVER_ACCESS_INVALID_PARAM - Invalid parameter or message
          in the request
      - SNS_SMGR_DRIVER_ACCESS_INVALID_REQ - Request is unsupported by the
          DD
      - SNS_SMGR_DRIVER_ACCESS_SMGR_FAILURE - Unspecified error in the SMGR
      - SNS_SMGR_DRIVER_ACCESS_DD_FAILURE - Unspecified error in the driver
      - SNS_SMGR_DRIVER_ACCESS_FAIL - Unspecified error
      - SNS_SMGR_DRIVER_ACCESS_PENDING - The request is pending completion
      - All other values defined as SNS_SMGR_DRIVER_ACCESS_XXXX style are
          reserved for future use
  */

  optional opaque ResponseMsg<SNS_SMGR_MAX_DAF_MESSAGE_SIZE>;
  /**< An opaque message to be delivered to the client. The client will parse
       this within the context of the request that the client last sent.
  */

  //! @VERSION 1.3
  optional uint8 TransactionId;
  /**< A unique identifier assigned by the client to distinguish this
       transaction from other concurrent transactions.
       IMPORTANT: It is up to the device driver to support concurrent
       transactions.
  */
} sns_smgr_driver_access_resp_msg;

//!============================================================================
/** @COMMAND SNS_SMGR_DRIVER_ACCESS_IND
    @BRIEF Driver Access Framework Message sent to the client from the driver
    @USAGE Production
    @SECURITY_LEVEL High Risk
    @REQUIRED_ACTION Default
*/
//!============================================================================

//! @MSG     SNS_SMGR_DRIVER_ACCESS_IND
//! @TYPE    Indication
//! @SENDER  Service
//! @VERSION 1.2
message {
  mandatory uint8 IndicationId;
  /**< The indication identifier specifies a particular request. Furthermore,
       this field tells the Sensor1 client how the IndicationMsg is encoded
       so it may be properly decoded. This field is only understood by the
       Sensor1 client and the driver.
  */

  optional opaque IndicationMsg<SNS_SMGR_MAX_DAF_MESSAGE_SIZE>;
  /**< An opaque message to be delivered to the client. The client will parse
       this according to the IndicationId.
  */

  //! @VERSION 1.3
  optional uint8 TransactionId;
  /**< A unique identifier assigned by the client to distinguish this
       transaction from other concurrent transactions.
       IMPORTANT: It is up to the device driver to support concurrent
       transactions.
  */
} sns_smgr_driver_access_ind_msg;

//!============================================================================
//! Service definition
//!============================================================================


service SNS_SMGR_RESTRICTED_SVC {
  //! @ID SNS_COMMON_CANCEL
  sns_common_cancel_req_msg             SNS_SMGR_RESTRICTED_CANCEL_REQ,
  sns_common_cancel_resp_msg            SNS_SMGR_RESTRICTED_CANCEL_RESP
    = 0x00;

  //! @ID SNS_COMMON_VERSION
  sns_common_version_req_msg            SNS_SMGR_RESTRICTED_VERSION_REQ,
  sns_common_version_resp_msg           SNS_SMGR_RESTRICTED_VERSION_RESP
    = 0x01;

  //! @ID SNS_SMGR_DRIVER_ACCESS
  sns_smgr_driver_access_req_msg        SNS_SMGR_DRIVER_ACCESS_REQ,
  sns_smgr_driver_access_resp_msg       SNS_SMGR_DRIVER_ACCESS_RESP
    = 0x20;
  //! @ID SNS_SMGR_DRIVER_ACCESS_IND
  sns_smgr_driver_access_ind_msg        SNS_SMGR_DRIVER_ACCESS_IND
    = 0x21;


} = SNS_QMI_SVC_ID_44;

//============================================================================
// File footer
//============================================================================
/**
@FOOTER
*/
//============================================================================
// End of Module
//============================================================================
