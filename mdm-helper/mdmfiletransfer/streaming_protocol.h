/*
 * ----------------------------------------------------------------------------
 *  Copyright (c) 2009-2012 Qualcomm Technologies, Inc.  All Rights Reserved.
 *  Qualcomm Technologies Proprietary and Confidential.
 *  ---------------------------------------------------------------------------
 *
 *  streaming_protocol.h : Interface to the Streaming download protocol
 *
 */
#ifndef STREAMING_PROTOCOL_H
#define STREAMING_PROTOCOL_H

#include "common.h"

#define STREAMING_CMD_HELLO_SIZE 39
#define STREAMING_CMD_HELLO_RESPONSE_SIZE 54
/*
#define STREAMING_CMD_READ_SIZE
#define STREAMING_CMD_READ_RESP_SIZE
#define STREAMING_CMD_WRITE_SIZE
#define STREAMING_CMD_WRITE_RESP_SIZE
#define STREAMING_CMD_STREAM_WRITE_SIZE
*/
#define STREAMING_CMD_STREAM_WRITE_RESP_SIZE 5
#define STREAMING_CMD_NOP_SIZE 1
/*
#define STREAMING_CMD_NOP_RESP_SIZE
*/
#define STREAMING_CMD_RESET_SIZE 1
#define STREAMING_CMD_RESET_RESP_SIZE 1
/*
#define STREAMING_CMD_ERROR_SIZE
#define STREAMING_CMD_LOG_SIZE
#define STREAMING_CMD_UNLOCK_SIZE
#define STREAMING_CMD_UNLOCK_RESP_SIZE
#define STREAMING_CMD_POWER_OFF_SIZE
#define STREAMING_CMD_POWER_OFF_RESP_SIZE
#define STREAMING_CMD_OPEN_SIZE
#define STREAMING_CMD_OPEN_RESP_SIZE
*/
#define STREAMING_CMD_CLOSE_SIZE 1
#define STREAMING_CMD_CLOSE_RESP_SIZE 1
#define STREAMING_CMD_SECURITY_MODE_SIZE 2
#define STREAMING_CMD_SECURITY_MODE_RESP_SIZE 1
/*
#define STREAMING_CMD_PARTITION_TABLE_SIZE
#define STREAMING_CMD_PARTITION_TABLE_RESP_SIZE
*/
#define STREAMING_CMD_OPEN_MULTI_IMAGE_SIZE 2
#define STREAMING_CMD_OPEN_MULTI_IMAGE_RESP_SIZE 2
/*
#define STREAMING_CMD_ERASE_FLASH_SIZE
#define STREAMING_CMD_ERASE_FLASH_RESP_SIZE
#define STREAMING_CMD_GET_ECC_SIZE
#define STREAMING_CMD_GET_ECC_RESP_SIZE
#define STREAMING_CMD_SET_ECC_SIZE
#define STREAMING_CMD_SET_ECC_RESP_SIZE
*/

#define FEATURE_UNCOMPRESSED_DLOAD    0x00000001
#define FEATURE_NAND_PRIMARY_IMAGE    0x00000002
#define FEATURE_NAND_BOOTLOADER_IMAGE 0x00000004
#define FEATURE_NAND_MULTI_IMAGE      0x00000008
#define FEATURE_SECTOR_ADDRESSES      0x00000010

enum streaming_cmd_id
{
    STREAMING_CMD_HELLO           = 0x01,
    STREAMING_CMD_HELLO_RESPONSE,
    STREAMING_CMD_READ,
    STREAMING_CMD_READ_RESP,
    STREAMING_CMD_WRITE,
    STREAMING_CMD_WRITE_RESP,
    STREAMING_CMD_STREAM_WRITE,
    STREAMING_CMD_STREAM_WRITE_RESP,
    STREAMING_CMD_NOP,
    STREAMING_CMD_NOP_RESP,
    STREAMING_CMD_RESET,
    STREAMING_CMD_RESET_RESP,
    STREAMING_CMD_ERROR,
    STREAMING_CMD_LOG,
    STREAMING_CMD_UNLOCK,
    STREAMING_CMD_UNLOCK_RESP,
    STREAMING_CMD_POWER_OFF,
    STREAMING_CMD_POWER_OFF_RESP,
    STREAMING_CMD_OPEN,
    STREAMING_CMD_OPEN_RESP,
    STREAMING_CMD_CLOSE,
    STREAMING_CMD_CLOSE_RESP,
    STREAMING_CMD_SECURITY_MODE,
    STREAMING_CMD_SECURITY_MODE_RESP,
    STREAMING_CMD_PARTITION_TABLE,
    STREAMING_CMD_PARTITION_TABLE_RESP,
    STREAMING_CMD_OPEN_MULTI_IMAGE,
    STREAMING_CMD_OPEN_MULTI_IMAGE_RESP,
    STREAMING_CMD_ERASE_FLASH,
    STREAMING_CMD_ERASE_FLASH_RESP,
    STREAMING_CMD_GET_ECC,
    STREAMING_CMD_GET_ECC_RESP,
    STREAMING_CMD_SET_ECC,
    STREAMING_CMD_SET_ECC_RESP,
    STREAMING_CMD_LAST_CMD_ID
};

boolean streaming_init_buffers ();
boolean streaming_ping_target ();
boolean begin_streaming_emmc (const char* filename);
boolean begin_streaming_nor (const char* filename);

#endif